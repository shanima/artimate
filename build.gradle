apply plugin: 'download-task'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:1.0'
    }
}

ext {
	dataDir = file("$buildDir/data")
}

task downloadData {
	description 'Downloads msak0 speaker from MOCHA-TIMIT database.'
	group 'data'
	ext.dataFile = new File(buildDir, 'msak0.tar.gz')
	outputs.files dataFile
	doLast {
		download {
			src 'http://data.cstr.ed.ac.uk/mocha/msak0_v1.1.tar.gz'
			dest dataFile
			overwrite false
		}
	}
}

task unpackData {
	description 'Unpacks one utterance from msak0 dataset for our demo.'
	dependsOn downloadData
	group 'data'
	outputs.files fileTree(dataDir).include('*.ema')
	doFirst {
		dataDir.mkdirs()
	}
	doLast {
		exec {
			executable sevenzip
			args 'x', downloadData.dataFile, '*.ema', '-y'
			workingDir dataDir
		}
	}
}

task convertData {
	description 'Convert EMA files to ASCII format, using EST.'
	dependsOn unpackData
	group 'data'
	inputs.files fileTree(dataDir).include('*.ema')
	outputs.files fileTree(dataDir).include('*.txt')
	doLast {
		inputs.files.each { infile ->
			logger.warn "converting $infile.name"
			exec {
				executable ch_track
				args infile.name, '-otype', 'est', '-o', infile.name.replace('.ema', '.txt')
				workingDir dataDir
			}
		}
	}
}

task generateMocapData {
	description 'Generate BVH files from the ASCII EMA files.'
	dependsOn convertData
	group 'data'
}

task buildModel {
	description 'Uses Blender to build a model using external 3D assets.'
	group 'model'
	outputs.files 'animated_model.blend'
}

task buildDemo {
	description 'Uses Blender to compile the model with the data into a demo app.'
	dependsOn buildModel
	group 'demo'
	def scriptFile = file('src/python/test.py')
	doLast {
		exec {
			executable blender
			args '--python', scriptFile
			workingDir buildDir
		}
	}
}
